<?xml version="1.0" encoding="iso-8859-1"?>
<!DOCTYPE muclient>
<!-- Saved on Wednesday, May 08, 2024, 9:05 AM -->
<!-- MuClient version 5.06 -->

<!-- Plugin "FA_MAP_WINDOW" generated by Plugin Wizard -->

<muclient>
<plugin
   name="FA_MAP_WINDOW"
   author="Fubar"
   id="55153a8014829a865bbf700d"
   language="Lua"
   purpose="MAP window."
   date_written="2024-05-08 09:02:52"
   requires="5.06"
   version="1.0"
   >
<description trim="y">
<![CDATA[
This will create a small window that scales to the size of your screen. This window will show current inventory. This includes the window and triggeres to make this work.
]]>
</description>

</plugin>


<!--  Get our standard constants -->

<include name="constants.lua"/>

<!--  Triggers  -->

<triggers>
  <trigger
   enabled="y"
   match="[Fighter Adventure] A wild Bacon has appeared.."
   send_to="12"
   sequence="100"
  >
  <send>world.Execute ("map")
		world.Execute ("north")
		world.Execute ("south")
</send>
  </trigger>
</triggers>


<triggers>
  <trigger
   enabled="y"
   group="MAP"
   match="^North"
   name="maptrigger"
   omit_from_output="y"
   regexp="y"
   send_to="12"
   sequence="1"
  >
  <send>Execute ("map", 0, trigger_flag.OmitFromOutput)

EnableTrigger("maptrigger", false)  -- disable trigger
DoAfterSpecial(2, "EnableTrigger ('maptrigger', true)", sendto.script)</send>
  </trigger>

</triggers>

<!--  Aliases  -->

<aliases>

  <alias
   match="map"
   enabled="y"
   group="MAP"
   send_to="12"
   omit_from_output="y"
   sequence="100"
  >
  <send>

require "wait"

wait.make(function()  -- coroutine starts here

    local win = GetPluginID() .. ":map"
    local font = "f"

    if not WindowInfo(win, 1) then
        WindowCreate(win, 0, 0, 0, 0, 6, 2, 0)
        WindowFont(win, font, "Courier New", 12)
    end

    -- Request map
    Execute("map", 0, trigger_flag.OmitFromOutput)

    -- Wait for map to start
    local x = wait.regexp("^MAP$", 10, trigger_flag.RegularExpression, trigger_flag.OmitFromOutput)

    if not x then
        -- ColourNote("white", "blue", "No map data within 10 seconds")
        return
    end

    local map = {}
    local max_width = 0
    local total_height = 0

    -- Loop until end of map lines till you reach endmap
    while true do
        local line, wildcards, styles = wait.regexp(".*", 0, trigger_flag.OmitFromOutput, trigger_flag.RegularExpression)

        -- See if end of map
        if string.match(line, "^ENDMAP$") then
            break
        end

        -- Save inventory line
        table.insert(map, styles)
        -- Work out max width
        max_width = math.max(max_width, WindowTextWidth(win, font, line))
        total_height = total_height + WindowFontInfo(win, font, 1)
    end

    local font_height = WindowFontInfo(win, font, 1)
    local window_width =  500 -- max_width + 10
    local window_height =  500 -- total_height + 10  -- Adjust the height to fit the content

    -- Make window correct sizev--fubar the sex god
    WindowCreate(win, 0, 0, window_width, window_height, 6, 0, ColourNameToRGB("#000000"))

    -- Draw each inventory line
    local y = font_height * 2 + 5

    for i, styles in ipairs(map) do
        local x = 5
        for _, style in ipairs(styles) do
            x = x + WindowRectOp(win, 2, x, y, 0, 0, style.backcolour)
            x = x + WindowText(win, font, style.text, x, y, 0, 0, style.textcolour)
        end
        y = y + font_height
    end

    WindowShow(win, true)
end)   -- end of coroutine

</send>
  </alias>
  <alias
   match="nomap"
   enabled="y"
   group="MAP"
   send_to="12"
   sequence="100"
  >
  <send>

local win = GetPluginID () .. ":map"

WindowShow (win, false)

</send>
  </alias>
</aliases>

<!--  Plugin help  -->

<aliases>
  <alias
   script="OnHelp"
   match="FA_MAP_WINDOW:help"
   enabled="y"
  >
  </alias>
</aliases>

<script>
<![CDATA[

-- show window on enable
function OnPluginEnable ()
  WindowShow (win,  true)  -- show it
end -- OnPluginEnable

-- hide window on disable
function OnPluginDisable ()
  WindowShow (win,  false)  -- hide it
end -- OnPluginDisable

function OnHelp ()
  world.Note (world.GetPluginInfo (world.GetPluginID (), 3))
end
]]>
</script> 

</muclient>

